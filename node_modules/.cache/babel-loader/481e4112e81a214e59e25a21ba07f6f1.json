{"ast":null,"code":"var _jsxFileName = \"/Users/ljcuriel/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js\";\nimport React, { useEffect, useState, useR } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { secondsToDuration } from \"../utils/duration\";\nimport Session from \"./Session\";\nimport Break from \"./Break\";\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const audioElement = useRef(null);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [sessionDuration, setSessionDuration] = useState(1500);\n  const [timer, setTimer] = useState(sessionDuration);\n  const [breakDuration, setBreakDuration] = useState(300);\n  const [currentSession, setCurrentSession] = useState('');\n  const breakSession = `On Break for ${secondsToDuration(breakDuration)} minutes`;\n  const focusSession = `Focusing for ${secondsToDuration(sessionDuration)} minutes`;\n  useEffect(() => {\n    setTimer(sessionDuration);\n    setCurrentSession(focusSession);\n  }, [focusSession, sessionDuration]);\n  useInterval(() => {\n    // ToDo: Implement what should happen when the timer is running\n    setTimer(prevTime => {\n      const newTime = prevTime - 1;\n\n      if (newTime >= 0) {\n        return prevTime - 1;\n      }\n\n      audioElement.current.play();\n\n      if (currentSession === breakSession) {\n        setCurrentSession(focusSession);\n        setTimer(sessionDuration);\n      } else if (currentSession === focusSession) {\n        setCurrentSession(breakSession);\n        setTimer(breakDuration);\n      }\n    });\n  }, isTimerRunning ? 100 : null);\n\n  function playPause() {\n    setIsTimerRunning(prevState => !prevState);\n  }\n\n  function stop() {\n    setIsTimerRunning(false);\n    setSessionDuration(1500);\n    setBreakDuration(300);\n    setTimer(1500);\n    audioElement.current.load();\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Session, {\n    sessionDuration: sessionDuration,\n    setSessionDuration: setSessionDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Break, {\n    breakDuration: breakDuration,\n    setBreakDuration: setBreakDuration,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"audio\", {\n    id: \"beep\",\n    ref: audioElement,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 8\n    }\n  }, /*#__PURE__*/React.createElement(\"source\", {\n    src: \"https://onlineclock.net/audio/options/default.mp3\",\n    type: \"audio/mpeg\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 10\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"btn-group btn-group-lg mb-2\",\n    role: \"group\",\n    \"aria-label\": \"Timer controls\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-primary\",\n    \"data-testid\": \"play-pause\",\n    title: \"Start or pause timer\",\n    onClick: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: classNames({\n      oi: true,\n      \"oi-media-play\": !isTimerRunning,\n      \"oi-media-pause\": isTimerRunning\n    }),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    title: \"Stop the session\",\n    onClick: stop,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-media-stop\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 15\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \" \", currentSession), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, secondsToDuration(timer), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\",\n    \"aria-valuenow\": \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    style: {\n      width: `0%`\n    } // TODO: Increase width % as elapsed time increases\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 15\n    }\n  }))))));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["/Users/ljcuriel/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useEffect","useState","useR","classNames","useInterval","secondsToDuration","Session","Break","Pomodoro","audioElement","useRef","isTimerRunning","setIsTimerRunning","sessionDuration","setSessionDuration","timer","setTimer","breakDuration","setBreakDuration","currentSession","setCurrentSession","breakSession","focusSession","prevTime","newTime","current","play","playPause","prevState","stop","load","oi","height","width"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useR } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { secondsToDuration } from \"../utils/duration\"\nimport Session from \"./Session\"\nimport Break from \"./Break\"\n\nfunction Pomodoro() {\n  // Timer starts out paused\n  const audioElement = useRef(null);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [ sessionDuration, setSessionDuration ] = useState(1500);\n  const [timer, setTimer] = useState(sessionDuration);\n  const [breakDuration,setBreakDuration] = useState(300);\n  const [currentSession, setCurrentSession] = useState('');\n \n\n  const breakSession = `On Break for ${secondsToDuration(breakDuration)} minutes`;\n  const focusSession = `Focusing for ${secondsToDuration(sessionDuration)} minutes`;\n\n  useEffect(() => {\n    setTimer(sessionDuration)\n    setCurrentSession(focusSession)\n  }, [focusSession, sessionDuration])\n  \n  useInterval(\n    () => {\n      // ToDo: Implement what should happen when the timer is running\n      setTimer(prevTime => {\n        const newTime = prevTime - 1;\n        if(newTime >= 0){\n          return prevTime - 1\n        }\n        audioElement.current.play()\n        if(currentSession === breakSession) {\n          setCurrentSession(focusSession);\n          setTimer(sessionDuration)\n        }else if(currentSession === focusSession){\n          setCurrentSession(breakSession);\n          setTimer(breakDuration)\n        }\n      })\n        \n    },\n    \n    isTimerRunning ? 100 : null\n  );\n\n  function playPause() {\n    setIsTimerRunning((prevState) => !prevState);\n  }\n function stop(){\n  setIsTimerRunning(false);\n  setSessionDuration(1500)\n  setBreakDuration(300)\n  setTimer(1500)\n  audioElement.current.load()\n }\n \n \n \n\n\n  return (\n    <div className=\"pomodoro\">\n      <Session \n        sessionDuration={sessionDuration} setSessionDuration={setSessionDuration}\n      />\n      <Break\n        breakDuration={breakDuration} setBreakDuration={setBreakDuration}\n       />\n       <audio id='beep' ref={audioElement}>\n         <source src=\"https://onlineclock.net/audio/options/default.mp3\" type=\"audio/mpeg\"/>\n       </audio>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div\n            className=\"btn-group btn-group-lg mb-2\"\n            role=\"group\"\n            aria-label=\"Timer controls\"\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              data-testid=\"play-pause\"\n              title=\"Start or pause timer\"\n              onClick={playPause}\n            >\n              <span\n                className={classNames({\n                  oi: true,\n                  \"oi-media-play\": !isTimerRunning,\n                  \"oi-media-pause\": isTimerRunning,\n                })}\n              />\n            </button>\n            {/* TODO: Implement stopping the current focus or break session and disable when there is no active session */}\n            <button\n              type=\"button\"\n              className=\"btn btn-secondary\"\n              title=\"Stop the session\"\n              onClick={ stop }\n            >\n              <span className=\"oi oi-media-stop\" />\n            </button>\n          </div>\n        </div>\n      </div>\n      <div>\n        {/* TODO: This area should show only when a focus or break session is running or pauses */}\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            {/* TODO: Update message below to include current session (Focusing or On Break) and total duration */}\n            <h2 data-testid=\"session-title\"> { currentSession }</h2>\n            {/* TODO: Update message below to include time remaining in the current session */}\n            <p className=\"lead\" data-testid=\"session-sub-title\">\n              {secondsToDuration(timer)} remaining\n            </p>\n          </div>\n        </div>\n        <div className=\"row mb-2\">\n          <div className=\"col\">\n            <div className=\"progress\" style={{ height: \"20px\" }}>\n              <div\n                className=\"progress-bar\"\n                role=\"progressbar\"\n                aria-valuemin=\"0\"\n                aria-valuemax=\"100\"\n                aria-valuenow= \"0\" // TODO: Increase aria-valuenow as elapsed time increases\n                style={{ width: `0%` }} // TODO: Increase width % as elapsed time increases\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}